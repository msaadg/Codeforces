#include <bits/stdc++.h>
using namespace std;

void SieveOfEratosthenes(int n, vector<bool>& prime)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
    

    for (int p = 2; p * p <= n; p++) {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true) {
            // Update all multiples of p greater than or
            // equal to the square of it numbers which are
            // multiple of p and are less than p^2 are
            // already been marked.
            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }

    // Print all prime numbers
    // for (int p = 2; p <= n; p++)
    //     if (prime[p])
    //         cout << p << " ";
}

// Driver Code
int main()
{
    vector<bool> prime (1e7+1, true);
    SieveOfEratosthenes(1e7, prime);
    int t;
    cin >> t;
    for (int i = 1; i <= t; i++)
    {
        int n;
        cin >> n;
        long long counter = 1;
        cout << "Case #" << i << ": ";  
        if (n < 5)
            cout << 0 << endl;
        else
        {
            for (int i = 5; i <= n; i++)
                if (prime[i] && prime[i-2]) counter++;
            cout << counter << endl;
        }
    }
    
    return 0;
}